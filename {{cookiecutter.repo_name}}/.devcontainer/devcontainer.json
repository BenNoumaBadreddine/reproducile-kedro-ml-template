// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
	"name": "Python 3",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/python:1-3.9-bullseye",
	"runArgs": [
		"--env",
        "MSI_ENDPOINT=http://localhost:4040"
	],
	"remoteEnv": {
		"PYTHONPATH": "${containerWorkspaceFolder}/src:${containerEnv:PYTHONPATH}",
		"PATH": "/home/vscode/.local/bin::${containerEnv:PATH}"
	},

	// Features to add to the dev container. More info: https://containers.dev/features.


	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "sudo apt-get update && sudo  apt-get install -y tesseract-ocr && curl -sSL https://install.python-poetry.org | python - && poetry install --sync --with dev,training,azure,pipelines,OCR --no-root && export TESSERACT_PATH=$(dirname $(command -v tesseract)) && export PATH=$TESSERACT_PATH:$PATH curl -sSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin | sudo tee /etc/apt/preferences.d/cuda-repository-pin-600 && sudo apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub && sudo add-apt-repository 'deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /' && sudo apt-get update && sudo apt-get -y install cuda-11-3",	  
	// "postCreateCommand":"sudo apt-get update && distribution=$(. /etc/os-release;echo $ID$VERSION_ID) && curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add - && curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list && sudo apt-get install -y nvidia-docker2 && sudo apt-get install -y tesseract-ocr && curl -sSL https://install.python-poetry.org | python - && poetry install --sync --with dev,training,azure,pipelines,OCR --no-root && export TESSERACT_PATH=$(dirname $(command -v tesseract)) && export PATH=$TESSERACT_PATH:$PATH",
	// "postCreateCommand": "sudo apt-get update && sudo apt-get install -y nvidia-docker2 && sudo apt-get -y install cuda-12-3 && sudo apt-get install -y tesseract-ocr  && curl -sSL https://install.python-poetry.org | python - && poetry install --sync --with dev,training,azure,pipelines,OCR --no-root && export TESSERACT_PATH=$(dirname $(command -v tesseract)) && export PATH=$TESSERACT_PATH:$PATH",
	// "postCreateCommand": "sudo apt-get update && distribution=$(. /etc/os-release;echo $ID$VERSION_ID) && curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add - && curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list && sudo apt-get install -y nvidia-docker2 && sudo apt-get install -y tesseract-ocr && curl -sSL https://developer.download.nvidia.com/compute/cuda/repos/$distribution/x86_64/cuda-$distribution.pin | sudo tee /etc/apt/preferences.d/cuda-repository-pin-600 && sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/$distribution/x86_64/7fa2af80.pub && sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/$distribution/x86_64/3bf863cc.pub && echo deb https://developer.download.nvidia.com/compute/cuda/repos/$distribution/x86_64 / | sudo tee /etc/apt/sources.list.d/cuda.list && sudo apt-get update && sudo apt-get -y install cuda-12-3 && curl -sSL https://install.python-poetry.org | python - && poetry install --sync --with dev,training,azure,pipelines,OCR --no-root && export TESSERACT_PATH=$(dirname $(command -v tesseract)) && export PATH=$TESSERACT_PATH:$PATH",
	"postCreateCommand":".devcontainer/install_post_create_dependencies.sh"
	// "postStartCommand":"poetry run pre-commit install && poetry run pre-commit install-hooks"
	// Configure tool-specific properties.
    // "customizations": {
	// 	"vscode": {
	// 		"extensions": [
	// 			"ms-python.python",
	// 			"ms-python.isort",
	// 			"ms-python.flake8",
	// 			"ms-python.black",
	// 			"ms-toolsai.vscode-ai",
	// 			"ms-toolsai.vscode-ai-remote",
	// 			"ms-toolsai.vscode-ai-remote-web",
	// 			"tamasfe.even-better-toml",
	// 			"ms-toolsai.jupyter-hub",
	// 			"ms-vscode.vscode-node-azure-pack",
	// 			"ms-azuretools.vscode-azureappservice",
	// 			"ms-azuretools.vscode-azurestorage",
	// 			"ms-vscode.azure-account",
	// 			"ms-azuretools.vscode-azureresourcegroups",
	// 			"ms-azure-devops.azure-pipelines",
	// 			"njpwerner.autodocstring",
	// 			"ms-mssql.mssql"
	// 		]
	// 	}

	// }

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "vscode"
	// "mounts": [
	// 	"source=C:/newforma_projects/shared_lib,target=/shared_lib,type=bind,consistency=cached"
	// ]

}
